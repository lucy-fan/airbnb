{"version":3,"sources":["webpack:///./src/app/bookings/bookings.module.ts","webpack:///./src/app/bookings/bookings.page.html","webpack:///./src/app/bookings/bookings.page.scss","webpack:///./src/app/bookings/bookings.page.ts","webpack:///./src/app/models/booking.ts","webpack:///./src/app/services/booking.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEE;AAE/C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,2DAAY;KACxB;CACF,CAAC;AAWF;IAAA;IAAiC,CAAC;IAArB,kBAAkB;QAT9B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,2DAAY,CAAC;SAC7B,CAAC;OACW,kBAAkB,CAAG;IAAD,yBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB/B,idAAid,YAAY,8BAA8B,mBAAmB,MAAM,iBAAiB,kEAAkE,gBAAgB,2U;;;;;;;;;;;ACAvnB,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;ACAb;AACH;AACH;AACiB;AAO7D;IAKE,sBACU,OAAsB,EACtB,cAA8B;QAD9B,YAAO,GAAP,OAAO,CAAe;QACtB,mBAAc,GAAd,cAAc,CAAgB;QANxC,YAAO,GAAY,IAAI,uDAAO,EAAE,CAAC;QACjC,aAAQ,GAAmB,EAAE,CAAC;QAC9B,gBAAW,GAAW,SAAS,CAAC;IAK1B,CAAC;IAEP,+BAAQ,GAAR,cAAY,CAAC;IAEb,uCAAgB,GAAhB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,uBAAuB,EAAE;IAC/D,CAAC;IAED,mCAAY,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;IAClD,CAAC;IAED,mCAAY,GAAZ,UAAa,OAAgB;QAC3B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IAED,mCAAY,GAAZ,UAAa,OAAgB;QAC3B,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACxC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC;IACtC,CAAC;IA5BU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kGAAmC;;SAEpC,CAAC;+EAOmB,4DAAa;YACN,wEAAc;OAP7B,YAAY,CA8BxB;IAAD,mBAAC;CAAA;AA9BwB;;;;;;;;;;;;;ACVzB;AAAA;AAAA;IAQI;QACI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QACZ,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,CAAC;IACL,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;AChB0C;AACO;AACN;AACA;AACgB;AACtB;AACiB;AAMvD;IAQE,wBACU,IAAgB,EAChB,WAAwB,EACxB,cAA8B;QAF9B,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QAVxC,aAAQ,GAAmB,EAAE,CAAC;QAC9B,YAAO,GAAY,IAAI,uDAAO,EAAE,CAAC;QACjC,YAAO,GAAY,IAAI,uDAAO,EAAE,CAAC;QACjC,SAAI,GAAS,IAAI,iDAAI,EAAE,CAAC;QAExB,gBAAW,GAAW,SAAS,CAAC;QAQ9B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC;IAClD,CAAC;IAED,iCAAQ,GAAR;IACA,CAAC;IAED,mCAAU,GAAV,UAAW,OAAgB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,mCAAU,GAAV;QACE,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,kCAAS,GAAT;QACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC7B,CAAC;IAED,mCAAU,GAAV,UAAW,OAAgB;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wCAAwC,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IAED,gDAAuB,GAAvB;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA6C,GAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;YACjF,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAE,UAAC,OAAO;gBACvC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC9B,CAAC,CAAC;QACJ,CAAC,CAAC;QACF,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,sCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;QAC7F,CAAC,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb;QACE,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAA2C,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;QAC7F,CAAC,CAAC;IACJ,CAAC;IA1DU,cAAc;QAJ1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAWgB,+DAAU;YACH,kEAAW;YACR,wEAAc;OAX7B,cAAc,CA4D1B;IAAD,qBAAC;CAAA;AA5D0B","file":"bookings-bookings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { BookingsPage } from './bookings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BookingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [BookingsPage]\n})\nexport class BookingsPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-title>\\n        Bookings\\n      </ion-title>\\n      <ion-button slot=\\\"start\\\" fill=\\\"clear\\\" size=\\\"large\\\" (click) = \\\"navToDetails()\\\">\\n          <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n        </ion-button>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <ion-list *ngFor=\\\"let booking of bookings let i=index\\\"> \\n      <ion-card>\\n        <ion-card-title>\\n          Booking #{{booking.id}}<br>\\n          Dates: From {{booking.dateStart}} to {{booking.dateEnd}}\\n        </ion-card-title>\\n        <ion-card-subtitle>Status: {{booking.status}}</ion-card-subtitle>\\n        <ion-button color=success *ngIf='booking.status == showButtons' (click) = \\\"acceptButton(booking)\\\">Accept</ion-button>\\n        <ion-button color=danger *ngIf='booking.status == showButtons' (click) = \\\"rejectButton(booking)\\\">Reject</ion-button>\\n    </ion-card>\\n    </ion-list> \\n  </ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Jvb2tpbmdzL2Jvb2tpbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { Booking } from '../models/booking';\nimport { BookingService } from '../services/booking.service';\n\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.page.html',\n  styleUrls: ['./bookings.page.scss'],\n})\nexport class BookingsPage implements OnInit {\n  booking: Booking = new Booking();\n  bookings: Array<Booking> = [];\n  showButtons: string = \"pending\";\n\n  constructor(\n    private navCtrl: NavController,\n    private bookingService: BookingService\n    ) { }\n\n  ngOnInit() {}\n\n  ionViewWillEnter() {\n    this.bookings = this.bookingService.returnBookingsByListing()\n  }\n\n  navToDetails() {\n    this.navCtrl.navigateForward(\"listing-details\");\n  }\n\n  acceptButton(booking: Booking) {\n    this.bookingService.setBooking(booking);\n    this.bookingService.acceptBooking();\n  }\n\n  rejectButton(booking: Booking) {\n    this.bookingService.setBooking(booking);\n    this.bookingService.rejectBooking();\n  }\n\n}\n","export class Booking {\n    public id: number;\n    public listingId: number;\n    public userId: number;\n    public status: string;\n    public dateStart: string;\n    public dateEnd: string;\n\n    constructor(){\n        this.id = 0;\n        this.listingId = 0;\n        this.userId = 0;\n        this.status = \"\";\n        this.dateStart = \"\";\n        this.dateEnd = \"\";\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Booking } from '../models/booking';\nimport { Listing } from '../models/listing';\nimport { ListingService } from '../services/listing.service'\nimport { User } from '../models/user';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BookingService {\n  bookings: Array<Booking> = [];\n  booking: Booking = new Booking();\n  listing: Listing = new Listing();\n  user: User = new User();\n\n  showButtons: string = \"pending\";\n\n  constructor(\n    private http: HttpClient,\n    private userService: UserService,\n    private listingService: ListingService\n  ) \n  { \n    this.user = this.userService.getUser();\n    this.listing = this.listingService.getListing();\n  }\n\n  ngOnInit() {\n  }\n\n  setBooking(booking: Booking) {\n    this.booking = booking;\n  }\n\n  getBooking(): Booking {\n    return this.booking;\n  }\n\n  getStatus(): string {\n    return this.booking.status;\n  }\n\n  addBooking(booking: Booking) {\n    return this.http.post('http://localhost:5000/api/bookings/add', booking);\n  }\n\n  returnBookingsByListing(){\n    this.bookings = [];\n    var id = this.listingService.getListing().id;\n    this.http.get('http://localhost:5000/api/bookings/listing/'+id).subscribe((response) => {\n      Object.values(response).forEach( (booking) => {\n        this.bookings.push(booking);\n      })\n    })\n    return this.bookings;\n  }\n\n  acceptBooking(){\n    this.booking.status = \"accepted\";\n    this.http.post('http://localhost:5000/api/bookings/update', this.booking).subscribe((response) => {\n    })\n  }\n\n  rejectBooking(){\n    this.booking.status = \"rejected\";\n    this.http.post('http://localhost:5000/api/bookings/update', this.booking).subscribe((response) => {\n    })\n  }\n\n}\n"],"sourceRoot":""}